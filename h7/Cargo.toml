[package]
name = "h7"
version = "0.1.0"
edition = "2021"
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Core
cortex-m = "0.7"
cortex-m-rt = "0.7"
#stm32h7xx-hal = { git = "https://github.com/stm32-rs/stm32h7xx-hal", features = [ "stm32h747cm7", "unproven", "rt", "fmc", "sdmmc-fatfs", "ltdc", "rtc", "crc", "usb_hs", "xspi", "rand", "ethernet" ] }
stm32h7xx-hal = { git = "https://github.com/stm32-rs/stm32h7xx-hal", features = [ "stm32h747cm7", "rt", "fmc", "sdmmc-fatfs", "ltdc", "rtc", "usb_hs", "xspi", "crc" ] }
#stm32h7xx-hal = { path = "../../stm32h7xx-hal", features = [ "stm32h747cm7", "unproven", "rt", "fmc", "sdmmc-fatfs", "ltdc", "rtc", "crc", "usb_hs" ] }
embedded-hal = { version = "0.2", features = [ "unproven" ] }

# Alloc, External SDRAM
cortex-m-alloc = { version = "0.4", package = "alloc-cortex-m" }
stm32-fmc = "0.2"

# SD Card / FAT
# embedded-sdmmc = { git = "https://github.com/rust-embedded-community/embedded-sdmmc-rs" }
embedded-sdmmc = { path = "../../embedded-sdmmc-rs" }

# Time
chrono = { version = "0.4", default-features = false }

# USB
synopsys-usb-otg = "0.3"
usb-device = "0.2"
usbd-serial = "0.1"

# Program API
h7-api = { path = "../h7-api" }

# Display
embedded-display-controller = "0.1"
anx7625 = { path = "../../anx7625-2" } # MIPI to Displayport

# Other
heapless = "0.7"

# Logging / Semihosting
log = { version = "0.4", default-features = false }
cortex-m-log = { version = "0.7", features = [ "semihosting", "log-integration" ], optional = true }
lazy_static = { version = "1.4", features = [ "spin_no_std" ], optional = true }
panic-semihosting = { version = "0.5", optional = true }
cortex-m-semihosting = { version = "0.3", optional = true }

[patch.crates-io]
# embedded-sdmmc = { git = "https://github.com/rust-embedded-community/embedded-sdmmc-rs" }
embedded-sdmmc = { path = "../../embedded-sdmmc-rs" }

[features]
default = []
semihosting = [
    "cortex-m-log",
    "panic-semihosting",
    "cortex-m-semihosting",
    "lazy_static"
]

[profile.dev]
codegen-units = 1 # better optimizations
debug = 2 # symbols are nice and they don't increase the size in flash
incremental = false

[profile.release]
codegen-units = 1 # better optimizations
debug = 2 # symbols are nice and they don't increase the size in flash
incremental = false
lto = true # better optimizations
opt-level = "s" # optimize for binary size, if size is availabe, change to 3?

[build-dependencies]
chrono = "0.4"
rustc_version = "0.4.0"
